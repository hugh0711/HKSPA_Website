'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="HKSPA_dev")>  _
Partial Public Class CategoryDataClassesDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertCategoryName(instance As CategoryName)
    End Sub
  Partial Private Sub UpdateCategoryName(instance As CategoryName)
    End Sub
  Partial Private Sub DeleteCategoryName(instance As CategoryName)
    End Sub
  Partial Private Sub InsertAlbumName(instance As AlbumName)
    End Sub
  Partial Private Sub UpdateAlbumName(instance As AlbumName)
    End Sub
  Partial Private Sub DeleteAlbumName(instance As AlbumName)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("MySqlConnection").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property view_Categories() As System.Data.Linq.Table(Of view_Category)
		Get
			Return Me.GetTable(Of view_Category)
		End Get
	End Property
	
	Public ReadOnly Property view_Promos() As System.Data.Linq.Table(Of view_Promo)
		Get
			Return Me.GetTable(Of view_Promo)
		End Get
	End Property
	
	Public ReadOnly Property view_ProductImages() As System.Data.Linq.Table(Of view_ProductImage)
		Get
			Return Me.GetTable(Of view_ProductImage)
		End Get
	End Property
	
	Public ReadOnly Property CategoryNames() As System.Data.Linq.Table(Of CategoryName)
		Get
			Return Me.GetTable(Of CategoryName)
		End Get
	End Property
	
	Public ReadOnly Property AlbumNames() As System.Data.Linq.Table(Of AlbumName)
		Get
			Return Me.GetTable(Of AlbumName)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.view_Category")>  _
Partial Public Class view_Category
	
	Private _CategoryID As Integer
	
	Private _ParentID As System.Nullable(Of Integer)
	
	Private _SortOrder As System.Nullable(Of Integer)
	
	Private _Enabled As System.Nullable(Of Boolean)
	
	Private _Lang As String
	
	Private _CategoryName As String
	
	Private _Category As String
	
	Private _Url As String
	
	Private _FunctionID As System.Nullable(Of Integer)
	
	Private _Description As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryID", DbType:="Int NOT NULL")>  _
	Public Property CategoryID() As Integer
		Get
			Return Me._CategoryID
		End Get
		Set
			If ((Me._CategoryID = value)  _
						= false) Then
				Me._CategoryID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ParentID", DbType:="Int")>  _
	Public Property ParentID() As System.Nullable(Of Integer)
		Get
			Return Me._ParentID
		End Get
		Set
			If (Me._ParentID.Equals(value) = false) Then
				Me._ParentID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SortOrder", DbType:="Int")>  _
	Public Property SortOrder() As System.Nullable(Of Integer)
		Get
			Return Me._SortOrder
		End Get
		Set
			If (Me._SortOrder.Equals(value) = false) Then
				Me._SortOrder = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Enabled", DbType:="Bit")>  _
	Public Property Enabled() As System.Nullable(Of Boolean)
		Get
			Return Me._Enabled
		End Get
		Set
			If (Me._Enabled.Equals(value) = false) Then
				Me._Enabled = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lang", DbType:="VarChar(10)")>  _
	Public Property Lang() As String
		Get
			Return Me._Lang
		End Get
		Set
			If (String.Equals(Me._Lang, value) = false) Then
				Me._Lang = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryName", DbType:="NVarChar(256)")>  _
	Public Property CategoryName() As String
		Get
			Return Me._CategoryName
		End Get
		Set
			If (String.Equals(Me._CategoryName, value) = false) Then
				Me._CategoryName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Category", DbType:="NVarChar(200)")>  _
	Public Property Category() As String
		Get
			Return Me._Category
		End Get
		Set
			If (String.Equals(Me._Category, value) = false) Then
				Me._Category = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Url", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Url() As String
		Get
			Return Me._Url
		End Get
		Set
			If (String.Equals(Me._Url, value) = false) Then
				Me._Url = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FunctionID", DbType:="Int")>  _
	Public Property FunctionID() As System.Nullable(Of Integer)
		Get
			Return Me._FunctionID
		End Get
		Set
			If (Me._FunctionID.Equals(value) = false) Then
				Me._FunctionID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.view_Promo")>  _
Partial Public Class view_Promo
	
	Private _PromoID As Integer
	
	Private _Name As String
	
	Private _PromoSettingID As System.Nullable(Of Integer)
	
	Private _PromoSingleImageUrl As String
	
	Private _PromoUrl As String
	
	Private _UnitFunctionID As System.Nullable(Of Integer)
	
	Private _StartDate As System.Nullable(Of Date)
	
	Private _EndDate As System.Nullable(Of Date)
	
	Private _IsSingleDay As System.Nullable(Of Boolean)
	
	Private _SortOrder As System.Nullable(Of Integer)
	
	Private _Enabled As System.Nullable(Of Boolean)
	
	Private _CreatedBy As String
	
	Private _CreateDate As System.Nullable(Of Date)
	
	Private _UpdatedBy As String
	
	Private _UpdateDate As System.Nullable(Of Date)
	
	Private _Lang As String
	
	Private _PromoName As String
	
	Private _PromoDesc As String
	
	Private _PromoImageUrl As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PromoID", DbType:="Int NOT NULL")>  _
	Public Property PromoID() As Integer
		Get
			Return Me._PromoID
		End Get
		Set
			If ((Me._PromoID = value)  _
						= false) Then
				Me._PromoID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(256)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PromoSettingID", DbType:="Int")>  _
	Public Property PromoSettingID() As System.Nullable(Of Integer)
		Get
			Return Me._PromoSettingID
		End Get
		Set
			If (Me._PromoSettingID.Equals(value) = false) Then
				Me._PromoSettingID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PromoSingleImageUrl", DbType:="NVarChar(256)")>  _
	Public Property PromoSingleImageUrl() As String
		Get
			Return Me._PromoSingleImageUrl
		End Get
		Set
			If (String.Equals(Me._PromoSingleImageUrl, value) = false) Then
				Me._PromoSingleImageUrl = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PromoUrl", DbType:="NVarChar(256)")>  _
	Public Property PromoUrl() As String
		Get
			Return Me._PromoUrl
		End Get
		Set
			If (String.Equals(Me._PromoUrl, value) = false) Then
				Me._PromoUrl = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnitFunctionID", DbType:="Int")>  _
	Public Property UnitFunctionID() As System.Nullable(Of Integer)
		Get
			Return Me._UnitFunctionID
		End Get
		Set
			If (Me._UnitFunctionID.Equals(value) = false) Then
				Me._UnitFunctionID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="DateTime")>  _
	Public Property StartDate() As System.Nullable(Of Date)
		Get
			Return Me._StartDate
		End Get
		Set
			If (Me._StartDate.Equals(value) = false) Then
				Me._StartDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate", DbType:="DateTime")>  _
	Public Property EndDate() As System.Nullable(Of Date)
		Get
			Return Me._EndDate
		End Get
		Set
			If (Me._EndDate.Equals(value) = false) Then
				Me._EndDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSingleDay", DbType:="Bit")>  _
	Public Property IsSingleDay() As System.Nullable(Of Boolean)
		Get
			Return Me._IsSingleDay
		End Get
		Set
			If (Me._IsSingleDay.Equals(value) = false) Then
				Me._IsSingleDay = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SortOrder", DbType:="Int")>  _
	Public Property SortOrder() As System.Nullable(Of Integer)
		Get
			Return Me._SortOrder
		End Get
		Set
			If (Me._SortOrder.Equals(value) = false) Then
				Me._SortOrder = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Enabled", DbType:="Bit")>  _
	Public Property Enabled() As System.Nullable(Of Boolean)
		Get
			Return Me._Enabled
		End Get
		Set
			If (Me._Enabled.Equals(value) = false) Then
				Me._Enabled = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedBy", DbType:="NVarChar(256)")>  _
	Public Property CreatedBy() As String
		Get
			Return Me._CreatedBy
		End Get
		Set
			If (String.Equals(Me._CreatedBy, value) = false) Then
				Me._CreatedBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDate", DbType:="DateTime")>  _
	Public Property CreateDate() As System.Nullable(Of Date)
		Get
			Return Me._CreateDate
		End Get
		Set
			If (Me._CreateDate.Equals(value) = false) Then
				Me._CreateDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdatedBy", DbType:="NVarChar(256)")>  _
	Public Property UpdatedBy() As String
		Get
			Return Me._UpdatedBy
		End Get
		Set
			If (String.Equals(Me._UpdatedBy, value) = false) Then
				Me._UpdatedBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdateDate", DbType:="DateTime")>  _
	Public Property UpdateDate() As System.Nullable(Of Date)
		Get
			Return Me._UpdateDate
		End Get
		Set
			If (Me._UpdateDate.Equals(value) = false) Then
				Me._UpdateDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lang", DbType:="VarChar(5)")>  _
	Public Property Lang() As String
		Get
			Return Me._Lang
		End Get
		Set
			If (String.Equals(Me._Lang, value) = false) Then
				Me._Lang = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PromoName", DbType:="NVarChar(256)")>  _
	Public Property PromoName() As String
		Get
			Return Me._PromoName
		End Get
		Set
			If (String.Equals(Me._PromoName, value) = false) Then
				Me._PromoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PromoDesc", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PromoDesc() As String
		Get
			Return Me._PromoDesc
		End Get
		Set
			If (String.Equals(Me._PromoDesc, value) = false) Then
				Me._PromoDesc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PromoImageUrl", DbType:="NVarChar(256)")>  _
	Public Property PromoImageUrl() As String
		Get
			Return Me._PromoImageUrl
		End Get
		Set
			If (String.Equals(Me._PromoImageUrl, value) = false) Then
				Me._PromoImageUrl = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.view_ProductImage")>  _
Partial Public Class view_ProductImage
	
	Private _CategoryID As Integer
	
	Private _ProductID As Integer
	
	Private _ProductCode As String
	
	Private _Name As String
	
	Private _Lang As String
	
	Private _ProductName As String
	
	Private _Description As String
	
	Private _Enabled As System.Nullable(Of Boolean)
	
	Private _SortOrder As System.Nullable(Of Integer)
	
	Private _SellingStartDate As System.Nullable(Of Date)
	
	Private _SellingEndDate As System.Nullable(Of Date)
	
	Private _Url As String
	
	Private _Width As Integer
	
	Private _Height As Integer
	
	Private _ThumbnailWidth As Integer
	
	Private _ThumbnailHeight As Integer
	
	Private _FunctionID As System.Nullable(Of Integer)
	
	Private _CategoryName As String
	
	Private _fileUrl As String
	
	Private _MOQUnit As String
	
	Private _ModifyDate As System.Nullable(Of Date)
	
	Private _ModifiedBy As String
	
	Private _LongDescription As String
	
	Private _NavigateUrl As String
	
	Private _VideoUrl As String
	
	Private _Author As String
	
	Private _CameraModel As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryID", DbType:="Int NOT NULL")>  _
	Public Property CategoryID() As Integer
		Get
			Return Me._CategoryID
		End Get
		Set
			If ((Me._CategoryID = value)  _
						= false) Then
				Me._CategoryID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductID", DbType:="Int NOT NULL")>  _
	Public Property ProductID() As Integer
		Get
			Return Me._ProductID
		End Get
		Set
			If ((Me._ProductID = value)  _
						= false) Then
				Me._ProductID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductCode", DbType:="NVarChar(50)")>  _
	Public Property ProductCode() As String
		Get
			Return Me._ProductCode
		End Get
		Set
			If (String.Equals(Me._ProductCode, value) = false) Then
				Me._ProductCode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(100)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lang", DbType:="VarChar(10)")>  _
	Public Property Lang() As String
		Get
			Return Me._Lang
		End Get
		Set
			If (String.Equals(Me._Lang, value) = false) Then
				Me._Lang = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProductName", DbType:="NVarChar(256)")>  _
	Public Property ProductName() As String
		Get
			Return Me._ProductName
		End Get
		Set
			If (String.Equals(Me._ProductName, value) = false) Then
				Me._ProductName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Enabled", DbType:="Bit")>  _
	Public Property Enabled() As System.Nullable(Of Boolean)
		Get
			Return Me._Enabled
		End Get
		Set
			If (Me._Enabled.Equals(value) = false) Then
				Me._Enabled = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SortOrder", DbType:="Int")>  _
	Public Property SortOrder() As System.Nullable(Of Integer)
		Get
			Return Me._SortOrder
		End Get
		Set
			If (Me._SortOrder.Equals(value) = false) Then
				Me._SortOrder = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SellingStartDate", DbType:="DateTime")>  _
	Public Property SellingStartDate() As System.Nullable(Of Date)
		Get
			Return Me._SellingStartDate
		End Get
		Set
			If (Me._SellingStartDate.Equals(value) = false) Then
				Me._SellingStartDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SellingEndDate", DbType:="DateTime")>  _
	Public Property SellingEndDate() As System.Nullable(Of Date)
		Get
			Return Me._SellingEndDate
		End Get
		Set
			If (Me._SellingEndDate.Equals(value) = false) Then
				Me._SellingEndDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Url", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Url() As String
		Get
			Return Me._Url
		End Get
		Set
			If (String.Equals(Me._Url, value) = false) Then
				Me._Url = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Width", DbType:="Int NOT NULL")>  _
	Public Property Width() As Integer
		Get
			Return Me._Width
		End Get
		Set
			If ((Me._Width = value)  _
						= false) Then
				Me._Width = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Height", DbType:="Int NOT NULL")>  _
	Public Property Height() As Integer
		Get
			Return Me._Height
		End Get
		Set
			If ((Me._Height = value)  _
						= false) Then
				Me._Height = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ThumbnailWidth", DbType:="Int NOT NULL")>  _
	Public Property ThumbnailWidth() As Integer
		Get
			Return Me._ThumbnailWidth
		End Get
		Set
			If ((Me._ThumbnailWidth = value)  _
						= false) Then
				Me._ThumbnailWidth = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ThumbnailHeight", DbType:="Int NOT NULL")>  _
	Public Property ThumbnailHeight() As Integer
		Get
			Return Me._ThumbnailHeight
		End Get
		Set
			If ((Me._ThumbnailHeight = value)  _
						= false) Then
				Me._ThumbnailHeight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FunctionID", DbType:="Int")>  _
	Public Property FunctionID() As System.Nullable(Of Integer)
		Get
			Return Me._FunctionID
		End Get
		Set
			If (Me._FunctionID.Equals(value) = false) Then
				Me._FunctionID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryName", DbType:="NVarChar(256) NOT NULL", CanBeNull:=false)>  _
	Public Property CategoryName() As String
		Get
			Return Me._CategoryName
		End Get
		Set
			If (String.Equals(Me._CategoryName, value) = false) Then
				Me._CategoryName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fileUrl", DbType:="NVarChar(256)")>  _
	Public Property fileUrl() As String
		Get
			Return Me._fileUrl
		End Get
		Set
			If (String.Equals(Me._fileUrl, value) = false) Then
				Me._fileUrl = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOQUnit", DbType:="NVarChar(50)")>  _
	Public Property MOQUnit() As String
		Get
			Return Me._MOQUnit
		End Get
		Set
			If (String.Equals(Me._MOQUnit, value) = false) Then
				Me._MOQUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyDate", DbType:="DateTime")>  _
	Public Property ModifyDate() As System.Nullable(Of Date)
		Get
			Return Me._ModifyDate
		End Get
		Set
			If (Me._ModifyDate.Equals(value) = false) Then
				Me._ModifyDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifiedBy", DbType:="NVarChar(256)")>  _
	Public Property ModifiedBy() As String
		Get
			Return Me._ModifiedBy
		End Get
		Set
			If (String.Equals(Me._ModifiedBy, value) = false) Then
				Me._ModifiedBy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LongDescription", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property LongDescription() As String
		Get
			Return Me._LongDescription
		End Get
		Set
			If (String.Equals(Me._LongDescription, value) = false) Then
				Me._LongDescription = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NavigateUrl", DbType:="NVarChar(256)")>  _
	Public Property NavigateUrl() As String
		Get
			Return Me._NavigateUrl
		End Get
		Set
			If (String.Equals(Me._NavigateUrl, value) = false) Then
				Me._NavigateUrl = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VideoUrl", DbType:="NVarChar(256)")>  _
	Public Property VideoUrl() As String
		Get
			Return Me._VideoUrl
		End Get
		Set
			If (String.Equals(Me._VideoUrl, value) = false) Then
				Me._VideoUrl = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Author", DbType:="NVarChar(256)")>  _
	Public Property Author() As String
		Get
			Return Me._Author
		End Get
		Set
			If (String.Equals(Me._Author, value) = false) Then
				Me._Author = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CameraModel", DbType:="NVarChar(500)")>  _
	Public Property CameraModel() As String
		Get
			Return Me._CameraModel
		End Get
		Set
			If (String.Equals(Me._CameraModel, value) = false) Then
				Me._CameraModel = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CategoryName")>  _
Partial Public Class CategoryName
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CategoryNameID As Integer
	
	Private _CategoryID As Integer
	
	Private _Lang As String
	
	Private _CategoryName As String
	
	Private _Description As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCategoryNameIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCategoryNameIDChanged()
    End Sub
    Partial Private Sub OnCategoryIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCategoryIDChanged()
    End Sub
    Partial Private Sub OnLangChanging(value As String)
    End Sub
    Partial Private Sub OnLangChanged()
    End Sub
    Partial Private Sub OnCategoryNameChanging(value As String)
    End Sub
    Partial Private Sub OnCategoryNameChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryNameID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CategoryNameID() As Integer
		Get
			Return Me._CategoryNameID
		End Get
		Set
			If ((Me._CategoryNameID = value)  _
						= false) Then
				Me.OnCategoryNameIDChanging(value)
				Me.SendPropertyChanging
				Me._CategoryNameID = value
				Me.SendPropertyChanged("CategoryNameID")
				Me.OnCategoryNameIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryID", DbType:="Int NOT NULL")>  _
	Public Property CategoryID() As Integer
		Get
			Return Me._CategoryID
		End Get
		Set
			If ((Me._CategoryID = value)  _
						= false) Then
				Me.OnCategoryIDChanging(value)
				Me.SendPropertyChanging
				Me._CategoryID = value
				Me.SendPropertyChanged("CategoryID")
				Me.OnCategoryIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lang", DbType:="VarChar(10)")>  _
	Public Property Lang() As String
		Get
			Return Me._Lang
		End Get
		Set
			If (String.Equals(Me._Lang, value) = false) Then
				Me.OnLangChanging(value)
				Me.SendPropertyChanging
				Me._Lang = value
				Me.SendPropertyChanged("Lang")
				Me.OnLangChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CategoryName", DbType:="NVarChar(256)")>  _
	Public Property CategoryName() As String
		Get
			Return Me._CategoryName
		End Get
		Set
			If (String.Equals(Me._CategoryName, value) = false) Then
				Me.OnCategoryNameChanging(value)
				Me.SendPropertyChanging
				Me._CategoryName = value
				Me.SendPropertyChanged("CategoryName")
				Me.OnCategoryNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AlbumName")>  _
Partial Public Class AlbumName
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _AlbumID As System.Guid
	
	Private _AlbumName As String
	
	Private _Description As String
	
	Private _Lang As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnAlbumIDChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnAlbumIDChanged()
    End Sub
    Partial Private Sub OnAlbumNameChanging(value As String)
    End Sub
    Partial Private Sub OnAlbumNameChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnLangChanging(value As String)
    End Sub
    Partial Private Sub OnLangChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AlbumID", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property AlbumID() As System.Guid
		Get
			Return Me._AlbumID
		End Get
		Set
			If ((Me._AlbumID = value)  _
						= false) Then
				Me.OnAlbumIDChanging(value)
				Me.SendPropertyChanging
				Me._AlbumID = value
				Me.SendPropertyChanged("AlbumID")
				Me.OnAlbumIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AlbumName", DbType:="NVarChar(256)")>  _
	Public Property AlbumName() As String
		Get
			Return Me._AlbumName
		End Get
		Set
			If (String.Equals(Me._AlbumName, value) = false) Then
				Me.OnAlbumNameChanging(value)
				Me.SendPropertyChanging
				Me._AlbumName = value
				Me.SendPropertyChanged("AlbumName")
				Me.OnAlbumNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lang", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property Lang() As String
		Get
			Return Me._Lang
		End Get
		Set
			If (String.Equals(Me._Lang, value) = false) Then
				Me.OnLangChanging(value)
				Me.SendPropertyChanging
				Me._Lang = value
				Me.SendPropertyChanged("Lang")
				Me.OnLangChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
